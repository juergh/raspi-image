#!/bin/bash -eu
#
# Build u-boot for Raspberry Pi
#

function build_uboot()
{
	local model=${1}

	case "${model}" in
		rpi_2)
			export CROSS_COMPILE=arm-linux-gnueabihf-
			;;
		rpi_3|rpi_4)
			export CROSS_COMPILE=aarch64-linux-gnu-
			;;
		*)
			echo "Invalid model ${model}" >&2
			exit 1
	esac

	make distclean
	make "${model}_defconfig"

	sed -i '/CONFIG_CMD_BOOTMENU/d' .config
	echo "CONFIG_CMD_BOOTMENU=y" >> .config

	sed -i '/CONFIG_ENV_FAT_FILE/d' .config
	echo "CONFIG_ENV_FAT_FILE=\"uboot_${model#rpi_}.env\"" >> .config

	make -j"$(nproc --all)"
	cp u-boot.bin ../boot/"uboot_${model#rpi_}.bin"
}

if ! [ -d u-boot ] ; then
	git clone git://git.denx.de/u-boot.git u-boot
	cd u-boot
else
	cd u-boot
	git clean -xf
	git checkout master
	git pull
fi

build_uboot rpi_2
build_uboot rpi_3
build_uboot rpi_4
